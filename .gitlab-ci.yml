before_script:
  - sudo add-apt-repository ppa:beineri/opt-qt-5.12.0-xenial
  - apt-get update
  - apt-get install -y python3-requests p7zip-full wget tree
  - apt-get install -y libdbus-1-3 libfreetype6 libfontconfig1
  - apt-get install -y build-essential libgl1-mesa-dev libglib2.0-dev mesa-common-dev libglu1-mesa-dev
  - apt-get install -y qt512-meta-minimal
  - . /opt/qt512/bin/qt512-env.sh
  # - wget https://git.kaidan.im/lnj/qli-installer/raw/master/qli-installer.py
  # - chmod +x qli-installer.py
  # - ./qli-installer.py 5.12.0 linux desktop
  # - wget -c http://download.qt.io/official_releases/online_installers/qt-unified-linux-x64-online.run
  # - wget -c https://raw.githubusercontent.com/benlau/qtci/master/bin/extract-qt-installer
  # - chmod +x extract-qt-installer
  # - ./extract-qt-installer qt-unified-linux-x64-*.run ./Qt
  # - chmod +x qt-unified-linux-x64-*.run
  # - ./qt-unified-linux-x64-*.run --script dist/qt-headless-installer.qs -platform minimal --verbose
  - tree
  - export QTPATH=$(pwd)/5.12.0/gcc_64
  - export PATH=$(pwd)/5.12.0/gcc_64/bin:$PATH
  - export QMAKESPEC=$(pwd)/5.12.0/gcc_64/mkspecs/linux-g++
  - qmake -set QT_INSTALL_PREFIX $QTPATH/install
  - qmake -set QT_INSTALL_ARCHDATA $QTPATH/install
  - qmake -set QT_INSTALL_DATA $QTPATH/install
  - qmake -set QT_INSTALL_DOCS $QTPATH/install/doc
  - qmake -set QT_INSTALL_HEADERS $QTPATH/install/include
  - qmake -set QT_INSTALL_LIBS $QTPATH/install/lib
  - qmake -set QT_INSTALL_LIBEXECS $QTPATH/install/libexec
  - qmake -set QT_INSTALL_BINS $QTPATH/install/bin
  - qmake -set QT_INSTALL_TESTS $QTPATH/install/tests
  - qmake -set QT_INSTALL_PLUGINS $QTPATH/install/plugins
  - qmake -set QT_INSTALL_IMPORTS $QTPATH/install/imports
  - qmake -set QT_INSTALL_QML $QTPATH/install/qml
  - qmake -set QT_INSTALL_TRANSLATIONS $QTPATH/install/translations
  - qmake -set QT_INSTALL_CONFIGURATION $QTPATH
  - qmake -set QT_INSTALL_EXAMPLES $QTPATH/install/examples
  - qmake -set QT_INSTALL_DEMOS $QTPATH/install/examples
  - qmake -set QT_HOST_PREFIX $QTPATH/install
  - qmake -set QT_HOST_DATA $QTPATH/install
  - qmake -set QT_HOST_BINS $QTPATH/install/bin
  - qmake -set QT_HOST_LIBS $QTPATH/install/lib
  - qmake -query

stages:
  # - lint
  - build

# lint:
#   stage: lint
#   script:
#     - qmllint desktop/qml/*.qml
#
build:
  stage: build
  script:
    - mkdir build;
    - cd build;
    - qmake -spec $QMAKESPEC -config release ..;
    - make -j 4;
    - mkdir -p deploy/usr/bin deploy/usr/lib deploy/usr/share;
    - mkdir deploy/usr/share/applications;
    - find . \( -name "moc_*" -or -name "*.o" -or -name "qrc_*" -or -name "Makefile*" -or -name "*.a" \) -exec rm {} \;
    - cp -R core/* desktop/* deploy/usr/bin
    - cd deploy;
    - cp ../../logo.png desktop.png
    - cp ../../dist/Qrop.desktop usr/share/applications
    - wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/5/linuxdeployqt-5-x86_64.AppImage"
    - chmod a+x linuxdeployqt*.AppImage;
    - unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH;
    - ./linuxdeployqt*.AppImage usr/share/applications/Qrop.desktop -verbose=2 -qmldir=/home/ah/src/qrop/desktop/qml -bundle-non-qt-libs -extra-plugins=sqldrivers,imageformats/libqsvg.so
    - ./linuxdeployqt*.AppImage usr/share/applications/Qrop.desktop -verbose=2 -qmldir=/home/ah/src/qrop/desktop/qml -appimage
    - find . | grep AppImage;

  artifacts:
    paths:
      - build/deploy/Qrop*.AppImage
